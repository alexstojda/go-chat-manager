apiVersion: v1
kind: Service
metadata:
  labels:
    app: chat-manager
#  annotations:
#    prometheus.io/scrape: "true"
#    prometheus.io/path: "/prometheus"
#    prometheus.io/port: "8080"
  name: chat-manager
  namespace: default
spec:
  selector:
    app: chat-manager
  ports:
    - name: "http-port"
      port: 80
      targetPort: http-port
  type: NodePort

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: chat-manager
  namespace: default
  labels:
    app: chat-manager
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  replicas: 1
  progressDeadlineSeconds: 100
  selector:
    matchLabels:
      app: chat-manager
  template:
    metadata:
      labels:
        app: chat-manager
    spec:
      containers:
        - name: go-chat-manager
          image: alexstojda/go-chat-manager:latest
          imagePullPolicy: IfNotPresent
          env:
            - name: NAME
              value: "value"
          securityContext:
            runAsUser: 1000
            runAsNonRoot: true
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
            limits:
              cpu: 250m
              memory: 256Mi
          ports:
            - containerPort: 8080
              name: http-port
          livenessProbe:
            httpGet:
              path: /api/health
              port: http-port
              scheme: HTTP
            initialDelaySeconds: 15
            timeoutSeconds: 10
          readinessProbe:
            httpGet:
              path: /api/health
              port: http-port
              scheme: HTTP
            initialDelaySeconds: 15
            timeoutSeconds: 10
